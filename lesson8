{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "history_visible": true,
      "authorship_tag": "ABX9TyNWKoRxy2NwE60uWTxYvwxf",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ramezanis/notebook/blob/main/lesson8\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WiWuejWCyDgH"
      },
      "outputs": [],
      "source": [
        "from google.colab import files"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "uploaded = files.upload()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "ufPrMyvDsAoh",
        "outputId": "5f11d59d-1f99-4757-e297-9758d891d439"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-db6e0ff4-29b0-48be-badf-44f94d9dd818\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-db6e0ff4-29b0-48be-badf-44f94d9dd818\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving preprocessed_df.csv to preprocessed_df.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "pBstujYjt96j"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('preprocessed_df.csv')"
      ],
      "metadata": {
        "id": "DPISXVHiuDBX"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 496
        },
        "id": "q-Gyx2OXuYj8",
        "outputId": "4f56bf4c-04e8-414e-f987-10658766db35"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Rating  Average_salary  Job Title_analyst  Job Title_data engineer  \\\n",
              "0        3.5           146.0                  0                        0   \n",
              "1        4.5           146.0                  0                        0   \n",
              "2        3.4           146.0                  1                        0   \n",
              "3        3.4           146.0                  0                        0   \n",
              "4        2.9           146.0                  0                        0   \n",
              "...      ...             ...                ...                      ...   \n",
              "4886     3.2            51.0                  0                        0   \n",
              "4887     4.2            68.0                  0                        0   \n",
              "4888     4.0            89.5                  0                        0   \n",
              "4889     4.0            89.0                  1                        0   \n",
              "4890     3.6            59.0                  1                        0   \n",
              "\n",
              "      Job Title_data scientist  Job Title_deep learning engineer  \\\n",
              "0                            1                                 0   \n",
              "1                            1                                 0   \n",
              "2                            0                                 0   \n",
              "3                            1                                 0   \n",
              "4                            1                                 0   \n",
              "...                        ...                               ...   \n",
              "4886                         0                                 0   \n",
              "4887                         0                                 0   \n",
              "4888                         0                                 0   \n",
              "4889                         0                                 0   \n",
              "4890                         0                                 0   \n",
              "\n",
              "      Job Title_director  Job Title_machine learning engineer  \\\n",
              "0                      0                                    0   \n",
              "1                      0                                    0   \n",
              "2                      0                                    0   \n",
              "3                      0                                    0   \n",
              "4                      0                                    0   \n",
              "...                  ...                                  ...   \n",
              "4886                   0                                    0   \n",
              "4887                   0                                    0   \n",
              "4888                   0                                    0   \n",
              "4889                   0                                    0   \n",
              "4890                   0                                    0   \n",
              "\n",
              "      Job Title_manager  Job Title_other  ...  State_NC  State_NH  State_NJ  \\\n",
              "0                     0                0  ...         0         0         0   \n",
              "1                     0                0  ...         0         0         0   \n",
              "2                     0                0  ...         0         0         1   \n",
              "3                     0                0  ...         0         0         0   \n",
              "4                     0                0  ...         0         0         0   \n",
              "...                 ...              ...  ...       ...       ...       ...   \n",
              "4886                  0                1  ...         0         0         0   \n",
              "4887                  0                1  ...         0         0         0   \n",
              "4888                  0                1  ...         0         0         0   \n",
              "4889                  0                0  ...         0         0         0   \n",
              "4890                  0                0  ...         0         0         0   \n",
              "\n",
              "      State_NM  State_NY  State_OH  State_PA  State_TX  State_VA  State_WI  \n",
              "0            0         1         0         0         0         0         0  \n",
              "1            0         1         0         0         0         0         0  \n",
              "2            0         0         0         0         0         0         0  \n",
              "3            0         1         0         0         0         0         0  \n",
              "4            0         1         0         0         0         0         0  \n",
              "...        ...       ...       ...       ...       ...       ...       ...  \n",
              "4886         0         0         1         0         0         0         0  \n",
              "4887         0         0         1         0         0         0         0  \n",
              "4888         0         0         1         0         0         0         0  \n",
              "4889         0         0         1         0         0         0         0  \n",
              "4890         0         0         1         0         0         0         0  \n",
              "\n",
              "[4891 rows x 34 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-50c7509e-d342-4a6c-a614-155c5611b2db\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rating</th>\n",
              "      <th>Average_salary</th>\n",
              "      <th>Job Title_analyst</th>\n",
              "      <th>Job Title_data engineer</th>\n",
              "      <th>Job Title_data scientist</th>\n",
              "      <th>Job Title_deep learning engineer</th>\n",
              "      <th>Job Title_director</th>\n",
              "      <th>Job Title_machine learning engineer</th>\n",
              "      <th>Job Title_manager</th>\n",
              "      <th>Job Title_other</th>\n",
              "      <th>...</th>\n",
              "      <th>State_NC</th>\n",
              "      <th>State_NH</th>\n",
              "      <th>State_NJ</th>\n",
              "      <th>State_NM</th>\n",
              "      <th>State_NY</th>\n",
              "      <th>State_OH</th>\n",
              "      <th>State_PA</th>\n",
              "      <th>State_TX</th>\n",
              "      <th>State_VA</th>\n",
              "      <th>State_WI</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3.5</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.5</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.4</td>\n",
              "      <td>146.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.4</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.9</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4886</th>\n",
              "      <td>3.2</td>\n",
              "      <td>51.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4887</th>\n",
              "      <td>4.2</td>\n",
              "      <td>68.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4888</th>\n",
              "      <td>4.0</td>\n",
              "      <td>89.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4889</th>\n",
              "      <td>4.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4890</th>\n",
              "      <td>3.6</td>\n",
              "      <td>59.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4891 rows × 34 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50c7509e-d342-4a6c-a614-155c5611b2db')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-50c7509e-d342-4a6c-a614-155c5611b2db button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-50c7509e-d342-4a6c-a614-155c5611b2db');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-db20dc2d-e5e6-409e-a659-d10a978c99af\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db20dc2d-e5e6-409e-a659-d10a978c99af')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-db20dc2d-e5e6-409e-a659-d10a978c99af button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UMTwmgSkudH5",
        "outputId": "f6334cbd-4a87-4534-e8ce-566a42045efb"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4891 entries, 0 to 4890\n",
            "Data columns (total 34 columns):\n",
            " #   Column                               Non-Null Count  Dtype  \n",
            "---  ------                               --------------  -----  \n",
            " 0   Rating                               4891 non-null   float64\n",
            " 1   Average_salary                       4891 non-null   float64\n",
            " 2   Job Title_analyst                    4891 non-null   int64  \n",
            " 3   Job Title_data engineer              4891 non-null   int64  \n",
            " 4   Job Title_data scientist             4891 non-null   int64  \n",
            " 5   Job Title_deep learning engineer     4891 non-null   int64  \n",
            " 6   Job Title_director                   4891 non-null   int64  \n",
            " 7   Job Title_machine learning engineer  4891 non-null   int64  \n",
            " 8   Job Title_manager                    4891 non-null   int64  \n",
            " 9   Job Title_other                      4891 non-null   int64  \n",
            " 10  Job Title_researcher                 4891 non-null   int64  \n",
            " 11  State_AZ                             4891 non-null   int64  \n",
            " 12  State_CA                             4891 non-null   int64  \n",
            " 13  State_DC                             4891 non-null   int64  \n",
            " 14  State_DE                             4891 non-null   int64  \n",
            " 15  State_FL                             4891 non-null   int64  \n",
            " 16  State_GA                             4891 non-null   int64  \n",
            " 17  State_IL                             4891 non-null   int64  \n",
            " 18  State_IN                             4891 non-null   int64  \n",
            " 19  State_KY                             4891 non-null   int64  \n",
            " 20  State_MA                             4891 non-null   int64  \n",
            " 21  State_MD                             4891 non-null   int64  \n",
            " 22  State_ME                             4891 non-null   int64  \n",
            " 23  State_MI                             4891 non-null   int64  \n",
            " 24  State_NC                             4891 non-null   int64  \n",
            " 25  State_NH                             4891 non-null   int64  \n",
            " 26  State_NJ                             4891 non-null   int64  \n",
            " 27  State_NM                             4891 non-null   int64  \n",
            " 28  State_NY                             4891 non-null   int64  \n",
            " 29  State_OH                             4891 non-null   int64  \n",
            " 30  State_PA                             4891 non-null   int64  \n",
            " 31  State_TX                             4891 non-null   int64  \n",
            " 32  State_VA                             4891 non-null   int64  \n",
            " 33  State_WI                             4891 non-null   int64  \n",
            "dtypes: float64(2), int64(32)\n",
            "memory usage: 1.3 MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = df.drop(columns='Average_salary')"
      ],
      "metadata": {
        "id": "Q_-U92kjuoJy"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y = df['Average_salary']"
      ],
      "metadata": {
        "id": "-i5DocuUvBiT"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "zdF0Mjf1vOWm"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=101)"
      ],
      "metadata": {
        "id": "UQtS_0TMwKB3"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 496
        },
        "id": "V3Uz52GxxKiA",
        "outputId": "6818862c-1336-47a3-f1b3-c702a426be03"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Rating  Job Title_analyst  Job Title_data engineer  \\\n",
              "4426     3.7                  0                        0   \n",
              "897      3.4                  0                        0   \n",
              "140      1.9                  0                        0   \n",
              "2440     4.1                  0                        0   \n",
              "2868     3.5                  0                        0   \n",
              "...      ...                ...                      ...   \n",
              "4079     3.8                  0                        0   \n",
              "4171     4.0                  0                        0   \n",
              "599      4.1                  0                        0   \n",
              "1361     3.7                  0                        1   \n",
              "1547     3.2                  0                        0   \n",
              "\n",
              "      Job Title_data scientist  Job Title_deep learning engineer  \\\n",
              "4426                         1                                 0   \n",
              "897                          0                                 0   \n",
              "140                          1                                 0   \n",
              "2440                         0                                 0   \n",
              "2868                         1                                 0   \n",
              "...                        ...                               ...   \n",
              "4079                         0                                 0   \n",
              "4171                         1                                 0   \n",
              "599                          1                                 0   \n",
              "1361                         0                                 0   \n",
              "1547                         1                                 0   \n",
              "\n",
              "      Job Title_director  Job Title_machine learning engineer  \\\n",
              "4426                   0                                    0   \n",
              "897                    0                                    0   \n",
              "140                    0                                    0   \n",
              "2440                   0                                    0   \n",
              "2868                   0                                    0   \n",
              "...                  ...                                  ...   \n",
              "4079                   0                                    0   \n",
              "4171                   0                                    0   \n",
              "599                    0                                    0   \n",
              "1361                   0                                    0   \n",
              "1547                   0                                    0   \n",
              "\n",
              "      Job Title_manager  Job Title_other  Job Title_researcher  ...  State_NC  \\\n",
              "4426                  0                0                     0  ...         0   \n",
              "897                   0                1                     0  ...         0   \n",
              "140                   0                0                     0  ...         0   \n",
              "2440                  0                1                     0  ...         0   \n",
              "2868                  0                0                     0  ...         0   \n",
              "...                 ...              ...                   ...  ...       ...   \n",
              "4079                  0                1                     0  ...         0   \n",
              "4171                  0                0                     0  ...         0   \n",
              "599                   0                0                     0  ...         0   \n",
              "1361                  0                0                     0  ...         0   \n",
              "1547                  0                0                     0  ...         0   \n",
              "\n",
              "      State_NH  State_NJ  State_NM  State_NY  State_OH  State_PA  State_TX  \\\n",
              "4426         0         0         0         0         0         0         0   \n",
              "897          0         0         0         0         0         0         0   \n",
              "140          0         0         0         1         0         0         0   \n",
              "2440         0         0         0         0         0         0         1   \n",
              "2868         0         0         0         0         0         0         1   \n",
              "...        ...       ...       ...       ...       ...       ...       ...   \n",
              "4079         0         0         0         0         0         0         0   \n",
              "4171         0         0         0         0         0         0         0   \n",
              "599          0         0         0         0         0         0         0   \n",
              "1361         0         0         0         0         0         0         0   \n",
              "1547         0         0         0         0         0         1         0   \n",
              "\n",
              "      State_VA  State_WI  \n",
              "4426         0         0  \n",
              "897          0         0  \n",
              "140          0         0  \n",
              "2440         0         0  \n",
              "2868         0         0  \n",
              "...        ...       ...  \n",
              "4079         0         0  \n",
              "4171         0         0  \n",
              "599          0         0  \n",
              "1361         0         0  \n",
              "1547         0         0  \n",
              "\n",
              "[3912 rows x 33 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae6401a0-2f0a-492a-9e13-497826eb6d39\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rating</th>\n",
              "      <th>Job Title_analyst</th>\n",
              "      <th>Job Title_data engineer</th>\n",
              "      <th>Job Title_data scientist</th>\n",
              "      <th>Job Title_deep learning engineer</th>\n",
              "      <th>Job Title_director</th>\n",
              "      <th>Job Title_machine learning engineer</th>\n",
              "      <th>Job Title_manager</th>\n",
              "      <th>Job Title_other</th>\n",
              "      <th>Job Title_researcher</th>\n",
              "      <th>...</th>\n",
              "      <th>State_NC</th>\n",
              "      <th>State_NH</th>\n",
              "      <th>State_NJ</th>\n",
              "      <th>State_NM</th>\n",
              "      <th>State_NY</th>\n",
              "      <th>State_OH</th>\n",
              "      <th>State_PA</th>\n",
              "      <th>State_TX</th>\n",
              "      <th>State_VA</th>\n",
              "      <th>State_WI</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4426</th>\n",
              "      <td>3.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>897</th>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>1.9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2440</th>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2868</th>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4079</th>\n",
              "      <td>3.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4171</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>599</th>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1361</th>\n",
              "      <td>3.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1547</th>\n",
              "      <td>3.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3912 rows × 33 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae6401a0-2f0a-492a-9e13-497826eb6d39')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ae6401a0-2f0a-492a-9e13-497826eb6d39 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ae6401a0-2f0a-492a-9e13-497826eb6d39');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e517c267-d227-4ab9-b073-ea564afdcd25\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e517c267-d227-4ab9-b073-ea564afdcd25')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e517c267-d227-4ab9-b073-ea564afdcd25 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "x_train"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 496
        },
        "id": "kebTQmLWxuZG",
        "outputId": "e2391144-cf88-4b15-f373-901a097f807d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Rating  Job Title_analyst  Job Title_data engineer  \\\n",
              "3982     3.9                  0                        0   \n",
              "2777     3.4                  0                        0   \n",
              "2369     4.5                  1                        0   \n",
              "4002     3.4                  1                        0   \n",
              "3907     3.5                  0                        1   \n",
              "...      ...                ...                      ...   \n",
              "951      4.0                  0                        0   \n",
              "403      4.0                  0                        1   \n",
              "1002     2.5                  1                        0   \n",
              "4090     3.2                  1                        0   \n",
              "1812     4.3                  0                        1   \n",
              "\n",
              "      Job Title_data scientist  Job Title_deep learning engineer  \\\n",
              "3982                         1                                 0   \n",
              "2777                         0                                 0   \n",
              "2369                         0                                 0   \n",
              "4002                         0                                 0   \n",
              "3907                         0                                 0   \n",
              "...                        ...                               ...   \n",
              "951                          0                                 0   \n",
              "403                          0                                 0   \n",
              "1002                         0                                 0   \n",
              "4090                         0                                 0   \n",
              "1812                         0                                 0   \n",
              "\n",
              "      Job Title_director  Job Title_machine learning engineer  \\\n",
              "3982                   0                                    0   \n",
              "2777                   0                                    0   \n",
              "2369                   0                                    0   \n",
              "4002                   0                                    0   \n",
              "3907                   0                                    0   \n",
              "...                  ...                                  ...   \n",
              "951                    0                                    0   \n",
              "403                    0                                    0   \n",
              "1002                   0                                    0   \n",
              "4090                   0                                    0   \n",
              "1812                   0                                    0   \n",
              "\n",
              "      Job Title_manager  Job Title_other  Job Title_researcher  ...  State_NC  \\\n",
              "3982                  0                0                     0  ...         0   \n",
              "2777                  0                1                     0  ...         0   \n",
              "2369                  0                0                     0  ...         0   \n",
              "4002                  0                0                     0  ...         0   \n",
              "3907                  0                0                     0  ...         0   \n",
              "...                 ...              ...                   ...  ...       ...   \n",
              "951                   0                1                     0  ...         0   \n",
              "403                   0                0                     0  ...         0   \n",
              "1002                  0                0                     0  ...         0   \n",
              "4090                  0                0                     0  ...         0   \n",
              "1812                  0                0                     0  ...         0   \n",
              "\n",
              "      State_NH  State_NJ  State_NM  State_NY  State_OH  State_PA  State_TX  \\\n",
              "3982         0         0         0         0         0         0         0   \n",
              "2777         0         0         0         0         0         0         0   \n",
              "2369         0         0         0         0         0         0         1   \n",
              "4002         0         0         0         0         0         0         0   \n",
              "3907         0         0         0         0         0         0         0   \n",
              "...        ...       ...       ...       ...       ...       ...       ...   \n",
              "951          0         0         0         0         0         0         1   \n",
              "403          0         0         0         0         0         0         0   \n",
              "1002         0         0         0         0         0         0         1   \n",
              "4090         0         0         0         0         0         0         0   \n",
              "1812         0         0         0         0         0         0         1   \n",
              "\n",
              "      State_VA  State_WI  \n",
              "3982         0         0  \n",
              "2777         0         0  \n",
              "2369         0         0  \n",
              "4002         0         0  \n",
              "3907         0         0  \n",
              "...        ...       ...  \n",
              "951          0         0  \n",
              "403          0         0  \n",
              "1002         0         0  \n",
              "4090         0         0  \n",
              "1812         0         0  \n",
              "\n",
              "[979 rows x 33 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-63441eaf-24b8-42fd-8d29-d4db0a2be286\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rating</th>\n",
              "      <th>Job Title_analyst</th>\n",
              "      <th>Job Title_data engineer</th>\n",
              "      <th>Job Title_data scientist</th>\n",
              "      <th>Job Title_deep learning engineer</th>\n",
              "      <th>Job Title_director</th>\n",
              "      <th>Job Title_machine learning engineer</th>\n",
              "      <th>Job Title_manager</th>\n",
              "      <th>Job Title_other</th>\n",
              "      <th>Job Title_researcher</th>\n",
              "      <th>...</th>\n",
              "      <th>State_NC</th>\n",
              "      <th>State_NH</th>\n",
              "      <th>State_NJ</th>\n",
              "      <th>State_NM</th>\n",
              "      <th>State_NY</th>\n",
              "      <th>State_OH</th>\n",
              "      <th>State_PA</th>\n",
              "      <th>State_TX</th>\n",
              "      <th>State_VA</th>\n",
              "      <th>State_WI</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3982</th>\n",
              "      <td>3.9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2777</th>\n",
              "      <td>3.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2369</th>\n",
              "      <td>4.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4002</th>\n",
              "      <td>3.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3907</th>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>951</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1002</th>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4090</th>\n",
              "      <td>3.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1812</th>\n",
              "      <td>4.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>979 rows × 33 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63441eaf-24b8-42fd-8d29-d4db0a2be286')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-63441eaf-24b8-42fd-8d29-d4db0a2be286 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-63441eaf-24b8-42fd-8d29-d4db0a2be286');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a17a4917-cc3d-4da2-8872-3f7a3db5bcf3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a17a4917-cc3d-4da2-8872-3f7a3db5bcf3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a17a4917-cc3d-4da2-8872-3f7a3db5bcf3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "x_test"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U55829EFxxhm",
        "outputId": "78f5e5ee-6300-4d58-be5b-16d68ab9dda2"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3982     82.0\n",
              "2777    156.5\n",
              "2369     70.5\n",
              "4002     65.5\n",
              "3907    127.0\n",
              "        ...  \n",
              "951     132.5\n",
              "403     176.0\n",
              "1002     53.5\n",
              "4090     64.0\n",
              "1812    118.5\n",
              "Name: Average_salary, Length: 979, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aCsNNAvbyEi7",
        "outputId": "27b5fbd5-bb49-4052-929f-4716c792ad44"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4426    160.0\n",
              "897      82.5\n",
              "140     169.5\n",
              "2440     68.5\n",
              "2868    148.5\n",
              "        ...  \n",
              "4079    119.5\n",
              "4171    129.5\n",
              "599      63.0\n",
              "1361    104.0\n",
              "1547    130.0\n",
              "Name: Average_salary, Length: 3912, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression"
      ],
      "metadata": {
        "id": "5wGDZVyhyG8m"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr = LinearRegression()"
      ],
      "metadata": {
        "id": "WB0Hq9E6y5XP"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr = lr.fit(x_train,y_train)"
      ],
      "metadata": {
        "id": "cWU_ystJzIwF"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(lr.intercept_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brJtyi_-zrH3",
        "outputId": "bb29c29f-f210-4d19-d409-e5e59e54abf1"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-116865316568596.19\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(lr.coef_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ie7kWc78z_VW",
        "outputId": "bc469988-1683-471a-b82f-5429df957a9f"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 1.85458939e+00  1.41057355e+14  1.41057355e+14  1.41057355e+14\n",
            "  1.41057355e+14  1.41057355e+14  1.41057355e+14  1.41057355e+14\n",
            "  1.41057355e+14  1.41057355e+14 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13 -2.41920383e+13 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13 -2.41920383e+13 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13 -2.41920383e+13 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13 -2.41920383e+13 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13 -2.41920383e+13 -2.41920383e+13 -2.41920383e+13\n",
            " -2.41920383e+13]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prediction = lr.predict(x_test)"
      ],
      "metadata": {
        "id": "bIM_MPNCzrpO"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prediction"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iVcBEc4yzsDw",
        "outputId": "f290107a-bf7e-467b-b964-180614ca27e2"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 92.921875, 124.140625,  91.171875,  74.953125,  99.6875  ,\n",
              "       122.015625,  91.171875,  84.15625 , 106.578125, 129.796875,\n",
              "        77.5625  , 139.265625,  97.640625,  87.625   ,  97.640625,\n",
              "        97.296875,  97.0625  , 136.828125,  94.09375 , 109.1875  ,\n",
              "       139.078125,  87.25    , 122.765625, 121.828125,  88.953125,\n",
              "        75.28125 ,  93.640625, 107.4375  ,  90.75    , 125.984375,\n",
              "        96.34375 , 121.671875,  88.015625,  98.203125,  85.4375  ,\n",
              "       123.578125,  98.953125, 112.28125 ,  90.234375, 114.015625,\n",
              "       123.359375, 122.015625, 106.203125,  88.71875 ,  78.03125 ,\n",
              "       125.4375  ,  94.5625  , 125.25    , 100.03125 , 116.1875  ,\n",
              "       149.625   , 103.1875  , 137.578125,  88.34375 , 106.765625,\n",
              "        89.703125, 138.359375,  99.328125,  97.28125 , 106.53125 ,\n",
              "       129.609375, 137.859375,  90.234375, 121.109375,  98.34375 ,\n",
              "        76.234375,  79.96875 , 113.296875, 116.5625  ,  75.859375,\n",
              "        74.015625,  93.640625,  80.75    ,  98.5625  , 125.625   ,\n",
              "        88.765625, 123.515625,  83.21875 , 116.1875  ,  81.125   ,\n",
              "       102.34375 , 140.953125,  95.      ,  92.6875  ,  98.90625 ,\n",
              "       124.5     , 138.546875, 136.828125, 109.1875  , 112.65625 ,\n",
              "        98.984375,  92.546875, 128.328125,  98.765625,  88.15625 ,\n",
              "       138.890625,  88.71875 ,  79.78125 ,  83.96875 , 124.3125  ,\n",
              "        74.34375 ,  76.046875,  96.546875,  87.40625 , 107.109375,\n",
              "       119.046875,  78.84375 ,  92.875   ,  93.640625,  71.421875,\n",
              "       124.484375, 129.078125,  90.625   , 121.671875, 107.109375,\n",
              "       128.703125, 136.296875, 136.484375, 114.390625, 120.140625,\n",
              "        99.84375 , 106.71875 , 106.578125,  88.953125, 114.015625,\n",
              "        91.171875,  92.546875,  93.640625,  87.78125 , 120.359375,\n",
              "       108.140625, 125.0625  , 137.015625, 120.734375, 118.03125 ,\n",
              "        80.71875 , 125.0625  ,  99.65625 , 137.984375, 141.609375,\n",
              "       128.859375, 107.109375, 104.125   ,  92.546875, 114.578125,\n",
              "        84.71875 ,  98.203125,  74.390625,  96.6875  , 135.734375,\n",
              "       121.484375, 140.765625,  74.15625 ,  97.8125  ,  96.921875,\n",
              "        84.53125 ,  94.015625, 106.90625 , 117.46875 ,  89.140625,\n",
              "        88.71875 , 105.96875 ,  78.546875,  87.828125,  99.65625 ,\n",
              "        97.828125, 139.265625, 137.203125, 139.265625,  99.3125  ,\n",
              "       107.859375, 105.078125, 136.484375, 119.234375,  95.046875,\n",
              "       135.921875,  88.90625 ,  89.09375 ,  96.3125  , 137.953125,\n",
              "        96.5     ,  93.25    ,  82.8125  ,  89.140625,  98.203125,\n",
              "       124.3125  ,  89.65625 , 138.890625, 140.390625, 138.890625,\n",
              "        93.609375,  76.75    , 136.859375,  90.421875, 107.859375,\n",
              "        97.484375, 121.828125, 137.390625, 140.578125, 101.15625 ,\n",
              "       139.078125,  96.546875,  97.484375,  93.109375, 120.890625,\n",
              "        88.53125 , 108.515625, 137.765625,  95.65625 ,  84.015625,\n",
              "       107.859375, 119.046875, 136.828125, 139.265625,  96.734375,\n",
              "        92.53125 ,  97.640625, 140.578125, 109.75    ,  89.1875  ,\n",
              "       125.796875,  77.9375  ,  99.03125 ,  89.890625, 120.921875,\n",
              "       117.09375 ,  98.203125,  97.8125  ,  92.4375  ,  89.34375 ,\n",
              "        78.734375,  92.578125, 138.359375, 129.265625,  75.140625,\n",
              "       106.390625, 139.265625,  97.640625, 138.734375, 105.640625,\n",
              "       111.609375,  96.90625 ,  83.8125  , 140.578125, 107.34375 ,\n",
              "        89.140625, 131.890625,  99.      ,  83.78125 , 120.546875,\n",
              "       137.796875, 109.1875  ,  83.25    ,  88.578125, 122.015625,\n",
              "       137.796875,  85.28125 , 137.765625,  88.21875 ,  75.28125 ,\n",
              "       137.140625,  97.4375  ,  95.1875  , 117.28125 ,  87.75    ,\n",
              "       124.6875  ,  80.75    , 115.625   ,  90.84375 , 124.5     ,\n",
              "       116.5625  , 114.765625,  95.984375, 113.671875,  88.203125,\n",
              "        77.3125  , 129.796875,  79.03125 ,  93.34375 , 104.3125  ,\n",
              "       129.421875, 114.203125, 136.109375,  89.328125,  84.203125,\n",
              "        83.625   ,  97.96875 , 139.078125,  90.984375, 122.578125,\n",
              "        98.265625, 140.390625,  87.0625  ,  93.046875, 138.359375,\n",
              "        80.15625 ,  96.546875,  98.      , 101.96875 ,  98.375   ,\n",
              "        89.71875 ,  90.984375, 137.765625, 140.859375, 120.546875,\n",
              "        92.734375, 137.390625, 106.578125, 138.734375, 136.109375,\n",
              "       141.984375, 120.921875, 123.890625,  96.90625 ,  90.625   ,\n",
              "       138.890625,  97.28125 , 138.890625, 130.546875,  77.84375 ,\n",
              "        80.875   ,  98.015625,  90.984375, 140.484375,  82.125   ,\n",
              "        75.28125 , 130.171875, 105.453125, 113.859375,  97.640625,\n",
              "        97.65625 , 120.984375,  90.75    , 134.796875,  97.484375,\n",
              "       130.546875, 114.015625,  95.046875, 108.      ,  88.53125 ,\n",
              "       136.203125,  87.59375 , 117.09375 ,  78.84375 , 139.078125,\n",
              "       123.390625, 137.765625, 116.1875  ,  89.890625, 112.65625 ,\n",
              "       106.15625 ,  98.953125,  98.015625,  90.234375, 126.734375,\n",
              "        91.359375, 138.546875, 123.140625, 114.015625,  88.765625,\n",
              "        99.453125,  92.5     ,  81.75    , 138.359375, 100.53125 ,\n",
              "        92.109375, 119.046875, 124.3125  ,  80.15625 , 121.828125,\n",
              "        90.984375,  74.71875 ,  92.359375, 125.796875, 106.203125,\n",
              "       138.890625,  96.359375, 109.1875  , 106.71875 ,  97.28125 ,\n",
              "       112.734375, 136.671875, 124.875   , 128.703125,  80.59375 ,\n",
              "        78.265625,  77.984375, 129.421875,  95.984375, 138.890625,\n",
              "        91.75    ,  99.828125,  83.21875 , 101.296875, 138.890625,\n",
              "        93.859375, 138.703125, 114.578125, 137.984375, 107.484375,\n",
              "       101.53125 , 140.015625,  93.484375,  88.90625 ,  84.15625 ,\n",
              "       138.890625,  90.234375, 126.921875,  98.75    ,  92.15625 ,\n",
              "        92.546875,  97.484375, 114.765625, 129.078125,  80.59375 ,\n",
              "        96.90625 , 116.71875 ,  79.828125,  76.609375,  90.8125  ,\n",
              "        89.53125 , 100.21875 ,  91.234375,  96.546875,  99.703125,\n",
              "       104.515625,  93.484375, 129.421875, 106.578125,  77.6875  ,\n",
              "       140.578125,  78.125   , 107.671875, 107.625   ,  92.921875,\n",
              "        93.296875, 123.578125,  96.34375 ,  98.      , 125.4375  ,\n",
              "       108.234375, 120.921875, 124.140625,  93.671875,  80.75    ,\n",
              "       108.65625 ,  93.4375  ,  88.015625, 117.03125 , 124.875   ,\n",
              "        88.953125, 138.359375, 106.765625, 139.265625, 120.359375,\n",
              "        91.046875,  75.625   , 103.1875  , 106.765625,  97.65625 ,\n",
              "       139.390625, 121.828125, 140.203125, 129.421875, 139.640625,\n",
              "        93.8125  ,  94.1875  , 129.078125,  98.953125, 114.203125,\n",
              "        76.046875,  88.015625,  95.1875  , 124.875   , 107.671875,\n",
              "       113.859375, 124.140625, 139.453125,  80.875   ,  89.71875 ,\n",
              "       114.953125, 103.9375  , 138.890625,  97.640625,  90.8125  ,\n",
              "       120.359375,  92.921875,  97.109375, 108.      ,  92.359375,\n",
              "        97.25    ,  88.015625, 137.796875, 105.640625, 136.671875,\n",
              "       106.53125 ,  96.90625 , 129.078125, 138.734375,  92.921875,\n",
              "       107.484375, 124.140625,  90.625   ,  75.625   , 124.3125  ,\n",
              "       110.0625  ,  81.0625  ,  84.15625 , 139.171875,  90.234375,\n",
              "       129.796875,  83.0625  ,  97.640625,  98.71875 , 105.640625,\n",
              "       102.046875, 138.734375,  92.921875,  75.46875 , 111.5625  ,\n",
              "        90.28125 ,  92.4375  , 137.203125, 122.015625,  94.015625,\n",
              "       100.734375, 139.578125,  90.515625, 121.828125,  92.4375  ,\n",
              "        79.84375 , 137.609375,  90.796875,  92.921875,  93.796875,\n",
              "        81.9375  , 125.25    ,  96.125   , 138.546875, 139.828125,\n",
              "        89.890625,  94.015625, 138.890625,  91.75    ,  88.90625 ,\n",
              "       104.125   ,  90.625   ,  97.109375, 134.609375, 125.046875,\n",
              "        83.96875 ,  78.546875,  93.609375, 113.859375, 126.921875,\n",
              "        88.390625,  90.8125  ,  90.09375 ,  97.828125,  93.640625,\n",
              "       127.953125,  92.578125, 109.03125 ,  93.109375,  92.109375,\n",
              "       124.3125  ,  88.921875, 109.9375  ,  92.921875,  88.71875 ,\n",
              "        99.84375 , 139.078125,  98.      ,  92.53125 ,  92.15625 ,\n",
              "       106.234375, 123.015625, 136.671875, 107.4375  ,  78.03125 ,\n",
              "        92.828125, 139.265625, 120.921875,  74.90625 ,  90.421875,\n",
              "        90.609375,  96.734375, 139.078125, 121.703125,  79.65625 ,\n",
              "        93.484375, 136.296875, 138.890625, 122.015625,  80.9375  ,\n",
              "       123.765625,  97.8125  ,  93.71875 ,  91.984375, 139.640625,\n",
              "       125.796875,  93.828125,  83.625   , 124.875   , 139.921875,\n",
              "       126.734375,  80.21875 , 113.875   ,  90.625   ,  93.109375,\n",
              "       102.71875 , 108.      , 125.984375,  83.0625  ,  75.28125 ,\n",
              "       112.734375, 100.171875, 135.921875, 101.03125 ,  87.78125 ,\n",
              "       110.625   ,  93.234375,  89.890625, 138.171875,  98.9375  ,\n",
              "       108.9375  , 122.015625,  94.234375,  76.046875,  88.96875 ,\n",
              "       135.921875,  92.15625 , 123.765625,  96.546875,  88.765625,\n",
              "       137.015625, 139.453125,  97.296875,  77.9375  ,  81.6875  ,\n",
              "       100.03125 ,  80.40625 , 116.90625 , 106.296875,  89.703125,\n",
              "       115.8125  ,  92.171875,  94.578125,  75.28125 ,  93.453125,\n",
              "        93.34375 ,  94.75    ,  89.34375 , 108.1875  , 117.28125 ,\n",
              "       137.953125, 137.796875,  99.65625 , 139.453125,  94.1875  ,\n",
              "       102.15625 ,  92.53125 , 125.796875, 106.578125, 124.3125  ,\n",
              "       122.203125, 124.875   , 114.203125,  95.21875 , 138.359375,\n",
              "       138.890625, 106.765625, 106.765625,  95.      ,  97.8125  ,\n",
              "       106.390625,  93.640625, 123.859375, 139.203125,  92.578125,\n",
              "       111.5625  ,  93.0625  , 124.5     ,  80.75    ,  92.359375,\n",
              "        92.109375,  82.6875  ,  95.984375,  95.328125, 104.125   ,\n",
              "        81.875   , 129.265625, 123.953125,  92.734375,  90.46875 ,\n",
              "        93.109375,  97.296875,  82.5     , 106.765625, 124.6875  ,\n",
              "       111.1875  , 136.109375,  91.828125,  92.171875,  76.75    ,\n",
              "       136.828125,  94.1875  ,  92.734375, 140.015625,  77.9375  ,\n",
              "       138.890625,  99.703125, 129.421875,  93.859375, 134.640625,\n",
              "       103.25    ,  87.453125, 106.15625 , 106.578125,  74.390625,\n",
              "        88.390625,  93.109375, 114.578125,  96.546875, 139.078125,\n",
              "        89.515625,  96.6875  , 113.859375, 122.390625, 127.09375 ,\n",
              "        88.953125,  93.640625, 108.40625 ,  99.5     ,  98.      ,\n",
              "        88.953125, 112.734375,  76.9375  , 106.203125,  92.578125,\n",
              "       109.5625  , 124.875   , 102.71875 , 138.171875,  80.9375  ,\n",
              "       137.578125,  97.8125  , 111.71875 ,  79.96875 , 109.453125,\n",
              "       107.609375, 137.203125, 135.921875,  97.8125  ,  99.703125,\n",
              "       138.734375, 124.6875  ,  77.      , 122.984375, 125.796875,\n",
              "        93.640625, 107.09375 , 107.671875, 139.078125,  85.09375 ,\n",
              "        88.90625 ,  93.640625, 107.671875,  76.      , 123.390625,\n",
              "       112.28125 , 140.015625, 111.609375, 129.609375, 117.09375 ,\n",
              "        89.71875 , 106.015625,  90.421875, 140.578125,  99.140625,\n",
              "       140.859375,  88.34375 , 120.546875, 105.265625,  95.      ,\n",
              "        76.984375,  88.015625,  93.96875 ,  92.359375,  90.046875,\n",
              "       139.453125,  93.859375,  93.640625,  90.984375, 138.546875,\n",
              "        80.15625 ,  82.8125  , 139.453125, 137.765625,  92.578125,\n",
              "       117.28125 ,  90.28125 ,  74.71875 ,  95.984375, 123.015625,\n",
              "       103.      , 137.609375,  88.015625, 107.671875,  91.59375 ,\n",
              "        96.734375,  89.65625 ,  93.109375, 107.671875,  76.375   ,\n",
              "        78.40625 , 109.375   ,  97.0625  ,  97.46875 , 138.171875,\n",
              "        98.375   , 120.171875,  93.640625, 125.171875, 137.515625,\n",
              "       136.296875,  82.5     , 129.796875, 105.03125 , 106.015625,\n",
              "       140.296875,  92.453125,  97.109375,  75.140625,  98.203125,\n",
              "       139.828125,  92.171875,  98.953125, 100.15625 , 114.203125,\n",
              "        92.546875,  88.578125, 137.421875, 126.828125, 114.015625,\n",
              "        98.390625, 116.      ,  77.28125 ,  82.40625 , 137.046875,\n",
              "       115.515625,  91.640625,  75.46875 ,  91.375   , 140.390625,\n",
              "        81.75    ,  76.046875,  92.40625 ,  88.34375 , 129.984375,\n",
              "       139.453125,  93.0625  ,  76.234375, 119.234375,  86.125   ,\n",
              "       116.5625  ,  88.125   ,  98.640625, 100.546875,  97.96875 ,\n",
              "        75.859375,  75.09375 , 112.28125 , 109.75    ,  84.15625 ,\n",
              "       120.359375,  89.90625 , 108.1875  , 121.484375,  81.375   ,\n",
              "        75.140625,  97.296875, 106.578125,  77.65625 , 125.625   ,\n",
              "        96.171875, 122.578125, 137.203125, 103.9375  ,  98.71875 ,\n",
              "       129.609375,  78.21875 ,  74.90625 , 102.71875 , 106.953125,\n",
              "       123.515625,  98.578125,  79.828125, 130.546875,  98.375   ,\n",
              "        79.65625 ,  78.921875,  91.75    ,  87.265625, 136.296875,\n",
              "       101.640625, 111.25    , 116.078125, 108.984375, 112.546875,\n",
              "       123.859375, 141.046875, 137.984375, 117.46875 , 141.421875,\n",
              "        99.5     ,  96.34375 , 139.265625, 140.296875,  88.390625,\n",
              "       126.921875, 114.578125,  97.96875 , 130.921875,  97.015625,\n",
              "        75.703125,  93.671875, 120.921875, 106.203125,  88.015625,\n",
              "        88.53125 , 119.953125,  81.0625  , 103.1875  ,  98.765625,\n",
              "       136.671875,  85.28125 , 119.234375, 140.015625, 128.890625,\n",
              "        91.34375 , 125.0625  ,  88.765625,  99.40625 , 122.578125,\n",
              "       122.203125, 119.421875, 124.6875  ,  94.515625, 124.6875  ,\n",
              "        92.015625,  99.703125, 137.984375, 137.796875, 134.984375,\n",
              "        79.84375 ,  95.234375, 120.140625, 103.0625  ,  97.109375,\n",
              "        84.15625 , 135.734375, 123.890625, 114.015625, 109.53125 ,\n",
              "        93.671875, 124.5     , 122.015625, 111.75    , 131.484375,\n",
              "       123.953125, 110.0625  , 104.328125, 121.671875,  93.453125,\n",
              "       129.609375,  87.453125,  74.578125,  98.390625])"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "residual = prediction - y_test"
      ],
      "metadata": {
        "id": "QXkn387Q41ET"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "residual"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PynRLU7R5T5k",
        "outputId": "affc12f6-15ac-42df-8285-e81e0138dcd1"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3982    10.921875\n",
              "2777   -32.359375\n",
              "2369    20.671875\n",
              "4002     9.453125\n",
              "3907   -27.312500\n",
              "          ...    \n",
              "951    -39.046875\n",
              "403    -46.390625\n",
              "1002    33.953125\n",
              "4090    10.578125\n",
              "1812   -20.109375\n",
              "Name: Average_salary, Length: 979, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "uCvUl26k5ajV"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(residual,bins=50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "zL7-W0ln5zMt",
        "outputId": "47fe618f-d805-49a8-9a94-89ab407fb35f"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7e79afe53a90>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "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DgAA8BtMVQkAgKWq9U568ODBlXZrf/jhh9UuCAAA/KJaIX3m8+gziouLtWvXLu3Zs6fMxBsAAKB6qhXSCxcuLHf7o48+qsLCwvMqCIA0aOhwZecerbA9LKSV0jas82BFAJxQ7e/uLs8tt9yiyy+/XM8880xNHhZocLJzj6r39MUVtu9ckuDBagA4pUZvHNu6dasaNWpUk4cEAKDBqtY76bFjx7qtG2OUnZ2tHTt26OGHH66RwgAAaOiqFdLBwcFu697e3oqMjNTcuXM1bNiwGikMAICGrlohnZKSUtN1AACA3zivG8fS09O1b98+SVKPHj3Uu3fvGikKAABUM6Tz8vJ00003KS0tTc2aNZMk5efna/DgwVq9erVat25dkzUC9U5VQ6yOZGWJP3nrh8OHDymyV98K27nWqEy1QjohIUE//vijvvrqK3Xr1k2StHfvXk2cOFH33HOPXn311RotEqhvqhpi9f3sOM8Vg1pVYsS1RrVVK6TXrVunjRs3ugJakrp3766kpCRuHAMAoIZUa5x0aWlpmTmkJcnX11elpaVnfZxly5apV69eCgoKUlBQkKKjo/XBBx+42k+ePKlp06apZcuWCgwMVHx8vHJzc6tTMgAAdU61QnrIkCG69957lZWV5dp25MgRzZw5U9dee+1ZH+eiiy7S/PnzlZ6erh07dmjIkCEaPXq0vvrqK0nSzJkz9c4772jNmjXavHmzsrKyyozRBgCgvqpWd/eSJUt0ww03qEOHDgoPD5ckHTp0SD179tTLL7981scZNWqU2/qTTz6pZcuWadu2bbrooouUnJysVatWaciQIZJ+GfrVrVs3bdu2TVdccUV1SgcAoM6oVkiHh4fr888/18aNG/X1119Lkrp166aYmJhqF1JSUqI1a9boxIkTio6OVnp6uoqLi92O2bVrV7Vr105bt26tMKSLiopUVFTkWi8oKKh2TQAAOOmcurs//PBDde/eXQUFBfLy8tLQoUOVkJCghIQE9evXTz169NDf//73cyrgyy+/VGBgoPz9/TV16lS9+eab6t69u3JycuTn5+ca4nVGSEiIcnJyKjzevHnzFBwc7FrOvNMHAKCuOaeQXrRokSZPnqygoKAybcHBwfqP//gPLViw4JwKiIyM1K5du/Tpp5/q7rvv1sSJE7V3795zOsavJSYm6vjx467l0KFD1T4WAABO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H5WUZ9euXZJk3XX4rcLCQn333Xe69dZbFRUVJV9fX6Wmpio+Pl6SlJGRoczMTKunGU5JSVGbNm00cuTISvfz6DWp9ffqKOP77783O3fuNI899pgJDAw0O3fuNDt37jQ//vijMcaY06dPm549e5phw4aZXbt2mXXr1pnWrVubxMRE1zH+8Y9/mMaNG5sHHnjA7Nu3zyQlJZkLLrjArFu3zqnTcrNx48YKu41XrFhhVq1aZfbt22f27dtnnnzySePt7W1eeuklByqt2JYtW8zChQvNrl27zHfffWdefvll07p1a3Pbbbe59snPzzchISHm1ltvNXv27DGrV682jRs3Ni+88IKDlZd1+PBh06lTJ3Pttdeaw4cPm+zsbNdyRl25LsYYs3r1auPv729WrFhh9u7da6ZMmWKaNWvmNiLCRnfffbcJDg42aWlpbtfgzEdU+/fvN3PnzjU7duwwBw4cMG+99Zbp2LGjufrqqx2uvKz77rvPpKWlmQMHDphPPvnExMTEmFatWpm8vDxjzC/d+e3atTMffvih2bFjh4mOjjbR0dEOV12xkpIS065dOzN79my37U5fE0LaARMnTiz3s8NNmza59jl48KAZMWKECQgIMK1atTL33XefKS4udjvOpk2bzGWXXWb8/PxMx44dTUpKimdPpBLjx483AwYMKLdtxYoVplu3bqZx48YmKCjIXH755W5DNWyRnp5u+vfvb4KDg02jRo1Mt27dzFNPPeX6PPqM3bt3m4EDBxp/f39z4YUXmvnz5ztUccVSUlIq/Mz6jLpyXc5YvHixadeunfHz8zOXX3652bZtm9MlVamia3DmZzczM9NcffXVpkWLFsbf39906tTJPPDAA+b48ePOFl6OcePGmbCwMOPn52cuvPBCM27cOLfPaH/++Wfzn//5n6Z58+amcePGZsyYMW5/FNpm/fr1RpLJyMhw2+70NWGqSgAALMU4aQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAVho0aJBmzJjhdBmAowhpwAO2bt2qCy64oMov7geAXyOkAQ9ITk5WQkKCPvroI2VlZdXa8xhjdPr06Vo7fl3Ca4H6gJAGallhYaFee+013X333Ro5cqRWrFghSbr55ps1btw4t32Li4vVqlUrrVy5UtIvUzDOmzdPERERCggI0KWXXqrXX3/dtX9aWpq8vLz0wQcfKCoqSv7+/vr444/13XffafTo0QoJCVFgYKD69eunjRs3uj1Xdna2Ro4cqYCAAEVERGjVqlXq0KGDFi1a5NonPz9fd911l1q3bq2goCANGTJEu3fvPqvz3r17twYPHqymTZsqKChIUVFR2rFjhyTphx9+0Pjx43XhhReqcePGuuSSS/Tqq69Werz//d//Vd++fdW0aVOFhobq5ptvVl5eXqWvxcsvvyxvb2/X856xaNEitW/fXqWlpWd1LoBTCGmglv31r39V165dFRkZqVtuuUUvvfSSjDGaMGGC3nnnHRUWFrr2Xb9+vX766SeNGTNGkjRv3jytXLlSy5cv11dffaWZM2fqlltu0ebNm92e4w9/+IPmz5+vffv2qVevXiosLNR1112n1NRU7dy5U8OHD9eoUaOUmZnpesxtt92mrKwspaWl6W9/+5tefPFFt9CTpBtvvFF5eXn64IMPlJ6erj59+ujaa6/Vv/71ryrPe8KECbrooou0fft2paen6w9/+INrzu2TJ08qKipK7733nvbs2aMpU6bo1ltv1WeffVbh8YqLi/X4449r9+7dWrt2rQ4ePKjbb7+9zH6/fi1uuOEGxcTEKCUlxW2flJQU3X777Wc1pzbgKI/MtQU0YAMGDDCLFi0yxhhTXFxsWrVqZTZt2uT698qVK137jh8/3owbN84YY8zJkydN48aNzZYtW9yON2nSJDN+/HhjzC/TlUoya9eurbKOHj16mMWLFxtjjNm3b5+RZLZv3+5q//bbb40ks3DhQmOMMX//+99NUFBQmak5L7744rOaL7tp06ZmxYoVVe53xsiRI819993nWr/mmmvMvffeW+H+27dvN5Jc87BX9Fq89tprpnnz5q7zSE9PN15eXubAgQNnXRvgFP6MBGpRRkaGPvvsM40fP16S5OPjo3Hjxik5OVk+Pj76/e9/r1deeUWSdOLECb311luaMGGCJGn//v366aefNHToUAUGBrqWlStX6rvvvnN7nr59+7qtFxYW6v7771e3bt3UrFkzBQYGat++fa530hkZGfLx8VGfPn1cj+nUqZOaN2/uWt+9e7cKCwvVsmVLt+c/cOBAmecvz6xZs3TXXXcpJiZG8+fPd3tMSUmJHn/8cV1yySVq0aKFAgMDtX79erd3+r+Vnp6uUaNGqV27dmratKmuueYaSSrzmN++FnFxcbrgggv05ptvSpJWrFihwYMHq0OHDlWeA+A0H6cLAOqz5ORknT59Wm3btnVtM8bI399fS5Ys0YQJE3TNNdcoLy9PGzZsUEBAgIYPHy5Jrm7w9957TxdeeKHbcf39/d3WmzRp4rZ+//33a8OGDXrmmWfUqVMnBQQE6He/+51OnTp11rUXFhYqLCxMaWlpZdqaNWtW5eMfffRR3XzzzXrvvff0wQcfaM6cOVq9erXGjBmjP//5z3ruuee0aNEiXXLJJWrSpIlmzJhRYX0nTpxQbGysYmNj9corr6h169bKzMxUbGxsmcf89rXw8/PTbbfdppSUFI0dO1arVq3Sc889d9avA+AkQhqoJadPn9bKlSv17LPPatiwYW5tcXFxevXVVzV16lSFh4frtdde0wcffKAbb7zR9blt9+7d5e/vr8zMTNe7xrP1ySef6Pbbb3d9tl1YWKiDBw+62iMjI3X69Gnt3LlTUVFRkn55537s2DHXPn369FFOTo58fHyq/a6zS5cu6tKli2bOnKnx48crJSVFY8aM0SeffKLRo0frlltukfTLDXLffPONunfvXu5xvv76a/3www+aP3++wsPDJanMzWCVueuuu9SzZ08tXbpUp0+f1tixY6t1PoCnEdJALXn33Xd17NgxTZo0ScHBwW5t8fHxSk5O1tSpU3XzzTdr+fLl+uabb7Rp0ybXPk2bNtX999+vmTNnqrS0VAMHDtTx48f1ySefKCgoSBMnTqzwuTt37qw33nhDo0aNkpeXlx5++GG3O5m7du2qmJgYTZkyRcuWLZOvr6/uu+8+BQQEyMvLS5IUExOj6OhoxcXF6emnn1aXLl2UlZWl9957T2PGjCnTrfxrP//8sx544AH97ne/U0REhA4fPqzt27crPj7eVd/rr7+uLVu2qHnz5lqwYIFyc3MrDOl27drJz89Pixcv1tSpU7Vnzx49/vjjVV+E/9etWzddccUVmj17tu68804FBASc9WMBRzn9oThQX11//fXmuuuuK7ft008/NZLM7t27zd69e40k0759e1NaWuq2X2lpqVm0aJGJjIw0vr6+pnXr1iY2NtZs3rzZGPPvm6WOHTvm9rgDBw6YwYMHm4CAABMeHm6WLFlS5kasrKwsM2LECOPv72/at29vVq1aZdq0aWOWL1/u2qegoMAkJCSYtm3bGl9fXxMeHm4mTJhgMjMzKz33oqIic9NNN5nw8HDj5+dn2rZta6ZPn25+/vlnY4wxP/zwgxk9erQJDAw0bdq0MQ899JC57bbbzOjRo13H+G29q1atMh06dDD+/v4mOjravP3220aS2blzZ6WvxRnJyclGkvnss88qrR2wiZcxxjj5RwIAOxw+fFjh4eHauHGjrr32WqfLqXGPP/641qxZoy+++MLpUoCzRnc30EB9+OGHKiws1CWXXKLs7Gw9+OCD6tChg66++mqnS6tRZz6PX7JkiZ544gmnywHOCUOwgAaquLhYf/zjH9WjRw+NGTNGrVu3VlpamuvGtar06NHDbWjWr5czw8psMH36dEVFRWnQoEG68847nS4HOCd0dwOolu+//17FxcXltoWEhKhp06YergiofwhpAAAsRXc3AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFjq/wCwPgf9HmZM3gAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn import metrics"
      ],
      "metadata": {
        "id": "gd7zCTCy6X4z"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print('MAE',metrics.mean_absolute_error(y_test,prediction))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B8sIW4fZ67hV",
        "outputId": "0cc8f0eb-a104-47fc-85fa-4de868711634"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE 23.453093079673135\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pickle"
      ],
      "metadata": {
        "id": "QblzOw8F8LAQ"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pickle.dump(lr,open('Salary_Estimater.pkl','wb'))"
      ],
      "metadata": {
        "id": "RsNuUUep8K0w"
      },
      "execution_count": 40,
      "outputs": []
    }
  ]
}